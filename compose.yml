x-service: &service
  build:
    dockerfile: ./docker/backend/Dockerfile
    context: ./
  env_file:
    - .env
  image: remembrancer/backend-${ENVIRONMENT}

services:
  api:
    <<: *service
    container_name: remembrancer-api-${ENVIRONMENT}
    command:
      - prod
    volumes:
      - attachments:/code/attachments/
    depends_on:
      db:
        condition: service_healthy
  celery:
    <<: *service
    depends_on:
      - redis
    command: celery worker -l INFO -Q django
  db:
    image: postgres:alpine3.18
    container_name: remembrancer-db-${ENVIRONMENT}
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  caddy:
    container_name: remembrancer-caddy-${ENVIRONMENT}
    build:
      dockerfile: ./docker/caddy/Dockerfile
      context: ./
    env_file:
    - .env
    ports:
      - "${SERVICE_PORT}:80"
    volumes:
      - static:/static
      - attachments:/attachments
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - api
  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
volumes:
  postgres_data:
  static:
  attachments:
  redis_data:
