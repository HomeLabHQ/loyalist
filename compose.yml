x-service: &service
  build:
    dockerfile: ./docker/backend/Dockerfile
    context: ./
  env_file:
    - .env
  image: ${COMPOSE_PROJECT_NAME}/backend-${ENVIRONMENT}
  volumes:
    - static:/code/static/
    - attachments:/code/attachments/
services:
  api:
    <<: *service
    container_name: ${COMPOSE_PROJECT_NAME}-api-${ENVIRONMENT}
    command:
      - prod
    depends_on:
      db:
        condition: service_healthy
      frontend:
        condition: service_completed_successfully
  celery:
    <<: *service
    depends_on:
      - cache
    command: celery worker -l INFO -Q django
    container_name: ${COMPOSE_PROJECT_NAME}-celery-${ENVIRONMENT}
  db:
    image: postgres:16
    container_name: ${COMPOSE_PROJECT_NAME}-db-${ENVIRONMENT}
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    depends_on:
      frontend:
        condition: service_completed_successfully
  caddy:
    container_name: ${COMPOSE_PROJECT_NAME}-caddy-${ENVIRONMENT}
    image: caddy:2.8.4
    env_file:
      - .env
    ports:
      - "${SERVICE_PORT:-80}:80"
    volumes:
      - static:/static
      - attachments:/attachments
      - docs:/docs
      - caddy_data:/data
      - caddy_config:/config
      - frontend_data:/usr/share/web
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      api:
        condition: service_started
      frontend:
        condition: service_completed_successfully
      docs:
        condition: service_completed_successfully
  cache:
    image: valkey/valkey:bookworm
    volumes:
      - cache_data:/data
    container_name: ${COMPOSE_PROJECT_NAME}-cache-${ENVIRONMENT}
    depends_on:
      frontend:
        condition: service_completed_successfully
  docs:
    build:
      dockerfile: ./docker/docs/Dockerfile
      context: ./
    env_file:
      - .env
    image: ${COMPOSE_PROJECT_NAME}/docs
    container_name: ${COMPOSE_PROJECT_NAME}-docs-${ENVIRONMENT}
    command:
      - build
    volumes:
      - ./docs:/code/docs
      - docs:/code/doc_site
  frontend:
    build:
      dockerfile: ./docker/frontend/Dockerfile
      context: ./
    env_file:
      - .env
    command:
      - build
    image: ${COMPOSE_PROJECT_NAME}/frontend
    container_name: ${COMPOSE_PROJECT_NAME}-frontend-${ENVIRONMENT}
    volumes:
      - frontend_data:/frontend/dist
volumes:
  static:
  attachments:
  caddy_data:
  caddy_config:
  postgres_data:
  docs:
  cache_data:
  frontend_data:
