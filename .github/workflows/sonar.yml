name: SonarCloud
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Start postgres
        run: docker run --name db-${GITHUB_SHA} -e POSTGRES_USER=${POSTGRES_USER} -e POSTGRES_PASSWORD=${POSTGRES_PASSWORD} postgres:17-alpine
      - name: Start cache
        run: docker run --name cache-${GITHUB_SHA}  valkey/valkey:alpine3.20
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Set up uv
        # Install latest uv version using the installer
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        working-directory: backend
        run: uv sync --extra test
      - name: Test for coverage
        working-directory: backend
        run: |
          uv run coverage run manage.py test &&
          uv run coverage xml
        env:
          REDIS_URL: redis://cache-${GITHUB_SHA}:6378
          PUBLIC_API_SECRET_KEY: ${{ secrets.PUBLIC_API_SECRET_KEY }}
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: db
          DB_HOST: db-${GITHUB_SHA}
          DB_PORT: 5432
      - name: Replace path
        run: sed -i 's|/home/runner/work/loyalist/loyalist/backend|/usr/src/backend|g' ./backend/coverage.xml
      - name: Create docker image
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: docker create --name sonar-${GITHUB_SHA} -e SONAR_TOKEN=${SONAR_TOKEN} -e SONAR_HOST_URL=${SONAR_HOST_URL} sonarsource/sonar-scanner-cli
      - name: Add files
        run: docker cp /home/runner/work/loyalist/loyalist/. sonar-${GITHUB_SHA}:/usr/src/.
      - name: Run sonar
        run: docker start -i sonar-${GITHUB_SHA}
      - name: Docker cleanup
        run: |
          docker stop sonar-${GITHUB_SHA}
          docker rm sonar-${GITHUB_SHA}
          docker system prune -f
